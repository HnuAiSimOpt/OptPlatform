# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'OptPlatform.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_OptPlatform(object):
    def setupUi(self, OptPlatform):
        OptPlatform.setObjectName("OptPlatform")
        OptPlatform.resize(1366, 824)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(OptPlatform.sizePolicy().hasHeightForWidth())
        OptPlatform.setSizePolicy(sizePolicy)
        OptPlatform.setMinimumSize(QtCore.QSize(0, 30))
        OptPlatform.setLayoutDirection(QtCore.Qt.LeftToRight)
        OptPlatform.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(OptPlatform)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_main = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_main.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_main.setSpacing(0)
        self.verticalLayout_main.setObjectName("verticalLayout_main")
        self.widget_main = QtWidgets.QWidget(self.centralwidget)
        self.widget_main.setObjectName("widget_main")
        self.verticalLayout_main.addWidget(self.widget_main)
        OptPlatform.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(OptPlatform)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1366, 23))
        self.menubar.setObjectName("menubar")
        self.menu_File = QtWidgets.QMenu(self.menubar)
        self.menu_File.setObjectName("menu_File")
        self.menu_Edit = QtWidgets.QMenu(self.menubar)
        self.menu_Edit.setObjectName("menu_Edit")
        self.menu_Settings = QtWidgets.QMenu(self.menubar)
        self.menu_Settings.setObjectName("menu_Settings")
        self.menu_language = QtWidgets.QMenu(self.menu_Settings)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/pic/icons/语言翻译.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_language.setIcon(icon)
        self.menu_language.setObjectName("menu_language")
        self.menu_theme = QtWidgets.QMenu(self.menu_Settings)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/pic/icons/初始化.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_theme.setIcon(icon1)
        self.menu_theme.setObjectName("menu_theme")
        self.menu_Help = QtWidgets.QMenu(self.menubar)
        self.menu_Help.setObjectName("menu_Help")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        OptPlatform.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(OptPlatform)
        self.statusbar.setMaximumSize(QtCore.QSize(16777215, 30))
        self.statusbar.setSizeGripEnabled(True)
        self.statusbar.setObjectName("statusbar")
        OptPlatform.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(OptPlatform)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toolBar.sizePolicy().hasHeightForWidth())
        self.toolBar.setSizePolicy(sizePolicy)
        self.toolBar.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.toolBar.setFont(font)
        self.toolBar.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        self.toolBar.setObjectName("toolBar")
        OptPlatform.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.dockWidget_paramSetting = QtWidgets.QDockWidget(OptPlatform)
        self.dockWidget_paramSetting.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.dockWidget_paramSetting.setAllowedAreas(QtCore.Qt.RightDockWidgetArea)
        self.dockWidget_paramSetting.setObjectName("dockWidget_paramSetting")
        self.dockWidgetContents_param = QtWidgets.QWidget()
        self.dockWidgetContents_param.setObjectName("dockWidgetContents_param")
        self.dockWidget_paramSetting.setWidget(self.dockWidgetContents_param)
        OptPlatform.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.dockWidget_paramSetting)
        self.dockWidget_prompt = QtWidgets.QDockWidget(OptPlatform)
        self.dockWidget_prompt.setObjectName("dockWidget_prompt")
        self.dockWidgetContents_prompt = QtWidgets.QWidget()
        self.dockWidgetContents_prompt.setObjectName("dockWidgetContents_prompt")
        self.dockWidget_prompt.setWidget(self.dockWidgetContents_prompt)
        OptPlatform.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.dockWidget_prompt)
        self.action_add_new = QtWidgets.QAction(OptPlatform)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/pic/icons/新建icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_add_new.setIcon(icon2)
        self.action_add_new.setObjectName("action_add_new")
        self.action_open_file = QtWidgets.QAction(OptPlatform)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/pic/icons/打开文件icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_open_file.setIcon(icon3)
        self.action_open_file.setObjectName("action_open_file")
        self.action_save = QtWidgets.QAction(OptPlatform)
        self.action_save.setEnabled(True)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/pic/icons/保存icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_save.setIcon(icon4)
        self.action_save.setObjectName("action_save")
        self.action_save_as = QtWidgets.QAction(OptPlatform)
        self.action_save_as.setEnabled(True)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/pic/icons/打印icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_save_as.setIcon(icon5)
        self.action_save_as.setVisible(True)
        self.action_save_as.setIconVisibleInMenu(True)
        self.action_save_as.setObjectName("action_save_as")
        self.action_close = QtWidgets.QAction(OptPlatform)
        self.action_close.setEnabled(False)
        self.action_close.setObjectName("action_close")
        self.action_quit = QtWidgets.QAction(OptPlatform)
        self.action_quit.setObjectName("action_quit")
        self.action_open_proj = QtWidgets.QAction(OptPlatform)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/pic/icons/打开项目.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_open_proj.setIcon(icon6)
        self.action_open_proj.setVisible(False)
        self.action_open_proj.setObjectName("action_open_proj")
        self.action_copy = QtWidgets.QAction(OptPlatform)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/pic/icons/复制.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_copy.setIcon(icon7)
        self.action_copy.setObjectName("action_copy")
        self.action_paste = QtWidgets.QAction(OptPlatform)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/pic/icons/粘贴.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_paste.setIcon(icon8)
        self.action_paste.setObjectName("action_paste")
        self.action_cut = QtWidgets.QAction(OptPlatform)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/pic/icons/剪切.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_cut.setIcon(icon9)
        self.action_cut.setObjectName("action_cut")
        self.action_aboutSoftware = QtWidgets.QAction(OptPlatform)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/pic/icons/帮助与说明.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_aboutSoftware.setIcon(icon10)
        self.action_aboutSoftware.setObjectName("action_aboutSoftware")
        self.action_model_tree = QtWidgets.QAction(OptPlatform)
        self.action_model_tree.setCheckable(True)
        self.action_model_tree.setChecked(False)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/pic/icons/树结构.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_model_tree.setIcon(icon11)
        self.action_model_tree.setObjectName("action_model_tree")
        self.action_message_log = QtWidgets.QAction(OptPlatform)
        self.action_message_log.setCheckable(True)
        self.action_message_log.setChecked(False)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/pic/icons/审批日志.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_message_log.setIcon(icon12)
        self.action_message_log.setObjectName("action_message_log")
        self.action_select_mode = QtWidgets.QAction(OptPlatform)
        self.action_select_mode.setEnabled(True)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/pic/icons/模板选择icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_select_mode.setIcon(icon13)
        self.action_select_mode.setObjectName("action_select_mode")
        self.action_close_proj = QtWidgets.QAction(OptPlatform)
        self.action_close_proj.setEnabled(False)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/pic/icons/关闭项目.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_close_proj.setIcon(icon14)
        self.action_close_proj.setVisible(False)
        self.action_close_proj.setObjectName("action_close_proj")
        self.action_close_module = QtWidgets.QAction(OptPlatform)
        self.action_close_module.setEnabled(False)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/pic/icons/删除模块.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_close_module.setIcon(icon15)
        self.action_close_module.setObjectName("action_close_module")
        self.action_apply = QtWidgets.QAction(OptPlatform)
        self.action_apply.setEnabled(False)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/pic/icons/开始计算icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_apply.setIcon(icon16)
        self.action_apply.setObjectName("action_apply")
        self.action_last = QtWidgets.QAction(OptPlatform)
        self.action_last.setEnabled(True)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/pic/icons/上一步icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_last.setIcon(icon17)
        self.action_last.setObjectName("action_last")
        self.action_next = QtWidgets.QAction(OptPlatform)
        self.action_next.setEnabled(True)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(":/pic/icons/下一步icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_next.setIcon(icon18)
        self.action_next.setObjectName("action_next")
        self.action_report = QtWidgets.QAction(OptPlatform)
        self.action_report.setEnabled(True)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(":/pic/icons/日志icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_report.setIcon(icon19)
        self.action_report.setObjectName("action_report")
        self.action_stop = QtWidgets.QAction(OptPlatform)
        self.action_stop.setEnabled(True)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap(":/pic/icons/停止计算icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_stop.setIcon(icon20)
        self.action_stop.setObjectName("action_stop")
        self.action_chinese = QtWidgets.QAction(OptPlatform)
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap(":/pic/icons/中国.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_chinese.setIcon(icon21)
        self.action_chinese.setObjectName("action_chinese")
        self.action_english = QtWidgets.QAction(OptPlatform)
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap(":/pic/icons/美国国旗.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_english.setIcon(icon22)
        self.action_english.setObjectName("action_english")
        self.action_classical = QtWidgets.QAction(OptPlatform)
        self.action_classical.setCheckable(True)
        self.action_classical.setChecked(True)
        self.action_classical.setObjectName("action_classical")
        self.action_dark = QtWidgets.QAction(OptPlatform)
        self.action_dark.setCheckable(True)
        self.action_dark.setObjectName("action_dark")
        self.action = QtWidgets.QAction(OptPlatform)
        self.action.setObjectName("action")
        self.action_solver = QtWidgets.QAction(OptPlatform)
        icon23 = QtGui.QIcon()
        icon23.addPixmap(QtGui.QPixmap(":/pic/icons/模型设置.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_solver.setIcon(icon23)
        self.action_solver.setObjectName("action_solver")
        self.menu_File.addAction(self.action_add_new)
        self.menu_File.addAction(self.action_open_file)
        self.menu_File.addAction(self.action_open_proj)
        self.menu_File.addAction(self.action)
        self.menu_File.addSeparator()
        self.menu_File.addAction(self.action_save)
        self.menu_File.addAction(self.action_save_as)
        self.menu_File.addSeparator()
        self.menu_File.addAction(self.action_close)
        self.menu_File.addSeparator()
        self.menu_File.addAction(self.action_quit)
        self.menu_Edit.addAction(self.action_copy)
        self.menu_Edit.addAction(self.action_paste)
        self.menu_Edit.addAction(self.action_cut)
        self.menu_language.addSeparator()
        self.menu_language.addAction(self.action_chinese)
        self.menu_language.addAction(self.action_english)
        self.menu_theme.addAction(self.action_classical)
        self.menu_theme.addAction(self.action_dark)
        self.menu_Settings.addAction(self.menu_language.menuAction())
        self.menu_Settings.addAction(self.menu_theme.menuAction())
        self.menu_Settings.addAction(self.action_solver)
        self.menu_Help.addAction(self.action_aboutSoftware)
        self.menu.addAction(self.action_model_tree)
        self.menu.addAction(self.action_message_log)
        self.menubar.addAction(self.menu_File.menuAction())
        self.menubar.addAction(self.menu_Settings.menuAction())
        self.menubar.addAction(self.menu_Edit.menuAction())
        self.menubar.addAction(self.menu.menuAction())
        self.menubar.addAction(self.menu_Help.menuAction())
        self.toolBar.addAction(self.action_add_new)
        self.toolBar.addAction(self.action_open_file)
        self.toolBar.addAction(self.action_open_proj)
        self.toolBar.addAction(self.action_close_proj)
        self.toolBar.addAction(self.action_save)
        self.toolBar.addAction(self.action_save_as)
        self.toolBar.addAction(self.action_select_mode)
        self.toolBar.addAction(self.action_apply)
        self.toolBar.addAction(self.action_last)
        self.toolBar.addAction(self.action_next)
        self.toolBar.addAction(self.action_stop)
        self.toolBar.addAction(self.action_report)

        self.retranslateUi(OptPlatform)
        QtCore.QMetaObject.connectSlotsByName(OptPlatform)

    def retranslateUi(self, OptPlatform):
        _translate = QtCore.QCoreApplication.translate
        OptPlatform.setWindowTitle(_translate("OptPlatform", "OptPlatform"))
        self.menu_File.setTitle(_translate("OptPlatform", "文件"))
        self.menu_Edit.setTitle(_translate("OptPlatform", "编辑"))
        self.menu_Settings.setTitle(_translate("OptPlatform", "设置"))
        self.menu_language.setTitle(_translate("OptPlatform", "语言"))
        self.menu_theme.setTitle(_translate("OptPlatform", "颜色主题"))
        self.menu_Help.setTitle(_translate("OptPlatform", "帮助"))
        self.menu.setTitle(_translate("OptPlatform", "窗口"))
        self.toolBar.setWindowTitle(_translate("OptPlatform", "toolBar"))
        self.action_add_new.setText(_translate("OptPlatform", "新建"))
        self.action_add_new.setShortcut(_translate("OptPlatform", "Ctrl+N"))
        self.action_open_file.setText(_translate("OptPlatform", "打开文件"))
        self.action_open_file.setShortcut(_translate("OptPlatform", "Ctrl+O"))
        self.action_save.setText(_translate("OptPlatform", "保存"))
        self.action_save.setShortcut(_translate("OptPlatform", "Ctrl+S"))
        self.action_save_as.setText(_translate("OptPlatform", "另存为"))
        self.action_save_as.setShortcut(_translate("OptPlatform", "Ctrl+Alt+S"))
        self.action_close.setText(_translate("OptPlatform", "关闭"))
        self.action_quit.setText(_translate("OptPlatform", "退出"))
        self.action_open_proj.setText(_translate("OptPlatform", "打开项目"))
        self.action_open_proj.setShortcut(_translate("OptPlatform", "Ctrl+Alt+O"))
        self.action_copy.setText(_translate("OptPlatform", "复制"))
        self.action_copy.setShortcut(_translate("OptPlatform", "Ctrl+C"))
        self.action_paste.setText(_translate("OptPlatform", "粘贴"))
        self.action_paste.setShortcut(_translate("OptPlatform", "Ctrl+V"))
        self.action_cut.setText(_translate("OptPlatform", "剪切"))
        self.action_cut.setShortcut(_translate("OptPlatform", "Ctrl+X"))
        self.action_aboutSoftware.setText(_translate("OptPlatform", "关于软件"))
        self.action_aboutSoftware.setShortcut(_translate("OptPlatform", "F12"))
        self.action_model_tree.setText(_translate("OptPlatform", "模型树"))
        self.action_message_log.setText(_translate("OptPlatform", "日志信息"))
        self.action_select_mode.setText(_translate("OptPlatform", "添加模块"))
        self.action_select_mode.setToolTip(_translate("OptPlatform", "添加功能模块"))
        self.action_close_proj.setText(_translate("OptPlatform", "关闭项目"))
        self.action_close_module.setText(_translate("OptPlatform", "删除模块"))
        self.action_close_module.setToolTip(_translate("OptPlatform", "删除模型树中选中的功能模块"))
        self.action_apply.setText(_translate("OptPlatform", "导入"))
        self.action_last.setText(_translate("OptPlatform", "上一步"))
        self.action_next.setText(_translate("OptPlatform", "下一步"))
        self.action_report.setText(_translate("OptPlatform", "报告"))
        self.action_stop.setText(_translate("OptPlatform", "停止"))
        self.action_chinese.setText(_translate("OptPlatform", "中文"))
        self.action_english.setText(_translate("OptPlatform", "英语"))
        self.action_classical.setText(_translate("OptPlatform", "经典"))
        self.action_dark.setText(_translate("OptPlatform", "深色"))
        self.action.setText(_translate("OptPlatform", "打开最近"))
        self.action_solver.setText(_translate("OptPlatform", "求解器"))
import icons_rc
